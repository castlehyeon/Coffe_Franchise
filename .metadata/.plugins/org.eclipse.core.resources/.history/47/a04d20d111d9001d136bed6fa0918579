package store;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import menu.Menu;

public class Headquarter {

	//private static String headquarterName;			//본사 이름
	//private static String headquarterPhoneNumber;		//본사 전화번호
	
	private List<Menu> menuList;				//메뉴
	private List<Store> storeList;				//가맹점들
	
	//생성자
	public Headquarter() {
	//	this.headquarterName = "DuzoneCoffe";
	//	this.headquarterPhoneNumber = "02-123-456";
		
		this.menuList = new ArrayList();
		this.storeList = new ArrayList();
		
	}

	
//	public static String getHeadquarterName() {
//		return headquarterName;
//	}
//
//	public static String getHeadquarterPhoneNumber() {
//		return headquarterPhoneNumber;
//	}


	//본사는 가맹점을 추가할 수 있다.
	public void addStore(Store store) {	
		Scanner sc = new Scanner(System.in);
		
		System.out.println("가맹점 추가를 선택하셨습니다.");
		System.out.println("등록할 가맹점의 정보를 입력해주세요.");
		System.out.print("가맹점 이름 : ");
		String name  = sc.next();
		System.out.print("가명점 주소 : ");
		
		System.out.print("가맹점 핸드폰 번호 : ");
		
		storeList.add(store);
	}
	
	//가맹점들 출력하기
	public void showStoreList() {
		System.out.println("=========가맹점 리스트===========");
		for(Store store : storeList) {
			System.out.println(store.getName());
		}
		System.out.println("============================");
	}

	
	//메뉴번호로 메뉴 가져오기
	private Menu selectMenu(int menuCode) {
		Menu menu = new Menu(menuCode, null, menuCode) ;
		for(Menu searchMenu : menuList) {
			if (menuCode == menu.getMenuCode()) {
				menu = searchMenu;
			}
		}
		return menu;
	}
	
	//메누생성
	public void createMenu(Menu menu) {
		menuList.add(menu);
	}
	
	//메뉴삭제
	public void deleteMenu(int menuCode) {
		Menu deleteMenu = selectMenu(menuCode);
		menuList.remove(deleteMenu);
		System.out.println("삭제된 메뉴 : " + deleteMenu.toString());
	}
	
	//메뉴수정
	public void updateMenu(String menuCode) {
		//?
	}
	
	
	//메뉴 보여주기
	public void showMenuList() {
		System.out.println("=========메뉴판===========");
		for(Menu menu : menuList) {
			System.out.println(menu.getMenuName());
		}
		System.out.println("========================");
	}
	
	//지점들 매출 리스트 뽑기
	public void storeSalseList(){
		for(Store store : storeList) {
			System.out.println(store.getName() + "지점 총 매출 : " + store.getTotalSales());
		}
	}
	
	//메인메뉴 
	public void headquarterMainMenu() {
		System.out.println("1.가맹점관리 2.메뉴관리 3.회원관리 4.스탬프관리 0.종료");
		
		Scanner sc = new Scanner(System.in);
		int menuNum = sc.nextInt();
		 
		switch (menuNum) {
			case 1 : manageStores();
			case 2 : manageMenu();
			case 3 : manageMembers();
			case 4 : manageStamps();
			case 0 : break;
			default : System.out.println("다시 선택해주세용"); headquarterMainMenu();
		}
	}
	
	
	//가맹점관리 메뉴 선택 
	public void manageStores() {
		System.out.println("가맹점관리를 선택하셨습니다.");
		
		System.out.println("1.가맹점생성 2.가맹점삭제 3.가맹점별 매출조회");
		
		Scanner sc = new Scanner(System.in);
		int menuNum = sc.nextInt();
		 
		switch (menuNum) {
			case 1 : addStore();//가맹점 생성
			case 2 : removeStore();//가맹점 삭제
			case 3 : storeSalseList();//가맹점별 매출조회
			case 0 : break;
			default : System.out.println("다시 선택해주세용"); manageStores();
		}
		
		
		System.out.println();
		
	}
	
	//메뉴관리 메뉴 선택 
	public void manageMenu() {
		System.out.println("메뉴관리를 선택하셨습니다.");
		
	}
	
	//회원관리 메뉴 선택 
	public void manageMembers() {
		System.out.println("회원관리를 선택하셨습니다.");
		
	}
	
	//스탬프관리 메뉴 선택 
	public void manageStamps() {
		System.out.println("스탬프관리를 선택하셨습니다.");
		
	}
		
		
	
	@Override
	public String toString() {
		return "본사의 메뉴리스트" + menuList.toString() + "\n 가맹점 리스트" + storeList.toString();
	}
	

}
